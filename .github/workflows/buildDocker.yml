name: Build
run-name: Building ${{ github.ref_name }} commit ${{ github.sha }} 
on: [ push ]
env: 
  BRANCH: ${{ github.ref_name }}
jobs: 
  DockerImage:
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: stocks-1:${{ github.ref_name }}
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: soccerKevin/Stocks
          ref: ${{ github.ref_name }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '16.15.0'

      - name: Build Image
        run: docker build -t $IMAGE_NAME .

      - name: Configure AWS deployer credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::267135861046:role/GithubActionsDeployer
          aws-region: us-west-1

      - name: aws config
        run: aws ecr get-login-password --region us-west-1 | docker login --username AWS --password-stdin 267135861046.dkr.ecr.us-west-1.amazonaws.com

      - name: Tag Image
        run: docker tag $IMAGE_NAME 267135861046.dkr.ecr.us-west-1.amazonaws.com/$IMAGE_NAME

      - name: Push Image
        run: docker push 267135861046.dkr.ecr.us-west-1.amazonaws.com/$IMAGE_NAME

      - name: Launch test instance
        run: aws ec2 run-instances --image-id ${{ vars.SERVER_AMI_ID }} --count 1 --instance-type ${{ vars.SERVER_INSTANCE_TYPE }} --security-group-ids ${{ secrets.SERVER_SG }} --key-name ${{ secrets.SERVER_PEM_NAME}}

      - name: Launch instance
        run: echo "INSTANCE_ID=$(aws ec2 run-instances --image-id ${{ vars.SERVER_AMI_ID }} --count 1 --instance-type ${{ vars.SERVER_INSTANCE_TYPE }} --security-group-ids ${{ secrets.SERVER_SG }} --key-name ${{ secrets.SERVER_PEM_NAME}} | jq -r '.Instances[0].InstanceId')" >> $GITHUB_ENV

      # - name: Parse instance ID
      #   run: echo "INSTANCE_ID=$(echo $LAUNCH_RESPONSE | jq -r '.Instances[0].InstanceId')" >> $GITHUB_ENV

      # - name: print1
      #   run: echo $LAUNCH_RESPONSE

      - name: print2
        run: echo $INSTANCE_ID

      - name: Wait for instance to be running
        run: aws ec2 wait instance-running --instance-ids $INSTANCE_ID
      
      - name: Get instance PublicDnsName
        run: echo "PUBLIC_DNS_NAME=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID | jq -r '.Reservations[0].Instances[0].PublicDnsName')" >> $GITHUB_ENV

      - name: print3
        run: echo $PUBLIC_DNS_NAME

      # - name: Wait for SSH to be available
      #   run: |
      #     while ! ssh -o StrictHostKeyChecking=no -i ${{ secrets.SERVER_PEM }} ec2-user@$PUBLIC_DNS_NAME exit; do
      #       echo "Waiting for SSH..."
      #       sleep 10
      #     done

      # - name: ssh into server
      #   run: ssh -o StrictHostKeyChecking=no -i ${{ secrets.SERVER_PEM }} ec2-user@$PUBLIC_DNS_NAME "docker pull 267135861046.dkr.ecr.us-west-1.amazonaws.com/$IMAGE_NAME"

      # - name: Install AWS_CLI
      #   run: |
      #     sudo yum update -y
      #     sudo yum install docker -y
      #     sudo service docker start
      #     sudo usermod -a -G docker ec2-user

